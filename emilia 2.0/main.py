import logging
import asyncio
import aiohttp
from aiogram import Bot, Dispatcher, types, executor
from aiogram.types import ReplyKeyboardMarkup, KeyboardButton
from aiogram.contrib.fsm_storage.memory import MemoryStorage
from aiogram.utils.exceptions import RetryAfter, NetworkError
from config import BOT_TOKEN

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–æ–≤
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

class AnimeBot:
    def __init__(self):
        self.bot = Bot(token=BOT_TOKEN, parse_mode='HTML')
        self.storage = MemoryStorage()
        self.dp = Dispatcher(self.bot, storage=self.storage)
        self.genres = ["Waifu", "Neko", "Shinobu", "Megumin"]
        self.nsfw_enabled = False
        self.session = None
        self.nsfw_allowed = ["waifu", "neko"]  # –ö–∞–∫–∏–µ –∂–∞–Ω—Ä—ã –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç NSFW

    async def on_startup(self, dp):
        self.session = aiohttp.ClientSession()
        logger.info("–ë–æ—Ç —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω")

    async def on_shutdown(self, dp):
        await self.session.close()
        logger.info("–ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")

    def get_main_menu(self):
        keyboard = ReplyKeyboardMarkup(resize_keyboard=True, row_width=2)
        for genre in self.genres:
            keyboard.add(KeyboardButton(genre))
        nsfw_text = "üîû –í—ã–∫–ª—é—á–∏—Ç—å NSFW" if self.nsfw_enabled else "üîû –í–∫–ª—é—á–∏—Ç—å NSFW"
        keyboard.add(KeyboardButton(nsfw_text))
        keyboard.add(KeyboardButton("üîÑ –û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é"))
        return keyboard

    async def get_waifu_image(self, genre: str):
        try:
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –ª–∏ NSFW –¥–ª—è —ç—Ç–æ–≥–æ –∂–∞–Ω—Ä–∞
            if self.nsfw_enabled and genre.lower() not in self.nsfw_allowed:
                return None
                
            category = 'nsfw' if self.nsfw_enabled else 'sfw'
            url = f"https://api.waifu.pics/{category}/{genre.lower()}"
            
            async with self.session.get(url, timeout=5) as response:
                if response.status != 200:
                    logger.error(f"API –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status}")
                    return None
                
                data = await response.json()
                return data['url']
                
        except asyncio.TimeoutError:
            logger.error("–¢–∞–π–º–∞—É—Ç –∑–∞–ø—Ä–æ—Å–∞ –∫ API")
            return None
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ API: {str(e)}")
            return None

    def register_handlers(self):
        @self.dp.message_handler(commands=['start', 'menu'])
        async def cmd_start(message: types.Message):
            try:
                await message.answer(
                    "üéå –î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∞–Ω–∏–º–µ-–±–æ—Ç!\n–í—ã–±–µ—Ä–∏—Ç–µ –∂–∞–Ω—Ä:",
                    reply_markup=self.get_main_menu()
                )
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –≤ /start: {str(e)}")

        @self.dp.message_handler(lambda m: m.text == "üîÑ –û–±–Ω–æ–≤–∏—Ç—å –º–µ–Ω—é")
        async def refresh_menu(message: types.Message):
            await cmd_start(message)

        @self.dp.message_handler(lambda m: m.text in ["üîû –í–∫–ª—é—á–∏—Ç—å NSFW", "üîû –í—ã–∫–ª—é—á–∏—Ç—å NSFW"])
        async def toggle_nsfw(message: types.Message):
            self.nsfw_enabled = not self.nsfw_enabled
            status = "–≤–∫–ª—é—á–µ–Ω" if self.nsfw_enabled else "–≤—ã–∫–ª—é—á–µ–Ω"
            await message.answer(
                f"NSFW —Ä–µ–∂–∏–º {status}",
                reply_markup=self.get_main_menu()
            )
            logger.info(f"NSFW —Ä–µ–∂–∏–º {status} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {message.from_user.id}")

        @self.dp.message_handler(lambda m: m.text in self.genres)
        async def handle_genre(message: types.Message):
            try:
                genre = message.text.lower()
                image_url = await self.get_waifu_image(genre)
                
                if not image_url:
                    error_msg = "‚ö†Ô∏è –≠—Ç–æ—Ç –∂–∞–Ω—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç NSFW" if self.nsfw_enabled else "‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ"
                    await message.answer(error_msg)
                    return
                
                await message.answer_photo(
                    image_url,
                    caption=f"–í–∞—à {genre} –∞—Ä—Ç! (NSFW: {'–¥–∞' if self.nsfw_enabled else '–Ω–µ—Ç'})",
                    reply_markup=self.get_main_menu()
                )
                
            except RetryAfter as e:
                await asyncio.sleep(e.timeout)
                await handle_genre(message)
            except Exception as e:
                logger.error(f"–û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∂–∞–Ω—Ä–∞: {str(e)}")
                await message.answer("‚ö†Ô∏è –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ")

    def run(self):
        self.register_handlers()
        executor.start_polling(
            self.dp,
            on_startup=self.on_startup,
            on_shutdown=self.on_shutdown,
            skip_updates=True,
            relax=1,
            timeout=20
        )

if __name__ == '__main__':
    bot = AnimeBot()
    bot.run()
